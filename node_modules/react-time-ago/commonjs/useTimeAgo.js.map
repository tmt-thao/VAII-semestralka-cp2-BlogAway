{"version":3,"file":"useTimeAgo.js","names":["useTimeAgo","date","future","locale","locales","timeStyle","round","minTimeLeft","formatVerboseDate","verboseDateFormat","DEFAULT_VERBOSE_DATE_FORMAT","updateInterval","tick","nowProperty","now","timeOffset","polyfill","preferredLocales","useMemo","concat","TimeAgo","getDefaultLocale","timeAgo","getTimeAgo","getDate","formatDate","useCallback","Date","stopUpdates","getTime","undefined","maxNow","format","getTimeToNextUpdate","formattedDate","timeToNextUpdate","INFINITY","formatDateRef","useRef","current","_formattedDate","_nextUpdateTime","useState","setFormattedDate","updater","useEffect","Updater","add","getNextValue","setValue","nextUpdateTime","stop","forceUpdate","verboseDateFormatter","getVerboseDateFormatter","verboseDate","YEAR","weekday","day","month","year","hour","minute","second"],"sources":["../source/useTimeAgo.js"],"sourcesContent":["import { useEffect, useState, useRef, useCallback, useMemo } from 'react'\r\nimport TimeAgo from 'javascript-time-ago'\r\n\r\nimport getVerboseDateFormatter from './helpers/getVerboseDateFormatter.js'\r\nimport { getDate } from './helpers/date.js'\r\nimport getTimeAgo from './helpers/getTimeAgo.js'\r\n\r\nimport Updater from './Updater.js'\r\n\r\nexport default function useTimeAgo({\r\n\t// `date: Date` or `timestamp: number`.\r\n\t// E.g. `new Date()` or `1355972400000`.\r\n\tdate,\r\n\r\n\t// If set to `true`, then will stop at \"zero point\"\r\n\t// when going from future dates to past dates.\r\n\t// In other words, even if the `date` has passed,\r\n\t// it will still render as if `date` is `now`.\r\n\tfuture,\r\n\r\n\t// Preferred locale.\r\n\t// Is 'en' by default.\r\n\t// E.g. 'ru-RU'.\r\n\tlocale,\r\n\r\n\t// Alternatively to `locale`, one could pass `locales`:\r\n\t// A list of preferred locales (ordered).\r\n\t// Will choose the first supported locale from the list.\r\n\t// E.g. `['ru-RU', 'en-GB']`.\r\n\tlocales,\r\n\r\n\t// Date/time formatting style.\r\n\t// See `javascript-time-ago` docs on \"Styles\" for more info.\r\n\t// E.g. 'round', 'round-minute', 'twitter', 'twitter-first-minute'.\r\n\ttimeStyle,\r\n\r\n\t// `round` parameter of `javascript-time-ago`.\r\n\t// See `javascript-time-ago` docs on \"Rounding\" for more info.\r\n\t// Examples: \"round\", \"floor\".\r\n\tround,\r\n\r\n\t// If specified, the time won't \"tick\" past this threshold (in seconds).\r\n\t// For example, if `minTimeLeft` is `60 * 60`\r\n\t// then the time won't \"tick\" past \"in 1 hour\".\r\n\tminTimeLeft,\r\n\r\n\t// Verbose date formatter.\r\n\t// By default it's `(date) => new Intl.DateTimeFormat(locale, {â€¦}).format(date)`.\r\n\tformatVerboseDate,\r\n\r\n\t// `Intl.DateTimeFormat` format for formatting verbose date.\r\n\t// See `Intl.DateTimeFormat` docs for more info.\r\n\tverboseDateFormat = DEFAULT_VERBOSE_DATE_FORMAT,\r\n\r\n\t// (deprecated)\r\n\t// How often the component refreshes itself.\r\n\t// When not provided, will use `getNextTimeToUpdate()` feature\r\n\t// of `javascript-time-ago` styles to determine the update interval.\r\n\tupdateInterval,\r\n\r\n\t// Set to `false` to disable automatic refresh of the component.\r\n\t// Is `true` by default.\r\n\t// I guess no one actually turns auto-update off, so this parameter is deprecated.\r\n\ttick = true,\r\n\r\n\t// \"Now\" timestamp.\r\n\t// E.g. `Date.now()`.\r\n\tnow: nowProperty,\r\n\r\n\t// Allows offsetting the `date` by an arbitrary amount of milliseconds.\r\n\t// https://gitlab.com/catamphetamine/react-time-ago/-/issues/4\r\n\ttimeOffset = 0,\r\n\r\n\t// Pass `false` to use native `Intl.RelativeTimeFormat` / `Intl.PluralRules`\r\n\t// instead of the polyfilled ones in `javascript-time-ago`.\r\n\t// The default value is `true` meaning that it uses polyfills for\r\n\t// `Intl.RelativeTimeFormat` / `Intl.PluralRules` (polyfills are from `javascript-time-ago`).\r\n\tpolyfill\r\n}) {\r\n\t// Get the list of preferred locales.\r\n\tconst preferredLocales = useMemo(() => {\r\n\t\t// Convert `locale` to `locales`.\r\n\t\tif (locale) {\r\n\t\t\tlocales = [locale]\r\n\t\t}\r\n\t\t// Add `javascript-time-ago` default locale.\r\n\t\treturn locales.concat(TimeAgo.getDefaultLocale())\r\n\t}, [\r\n\t\tlocale,\r\n\t\tlocales\r\n\t])\r\n\r\n\t// Create `javascript-time-ago` formatter instance.\r\n\tconst timeAgo = useMemo(() => {\r\n\t\treturn getTimeAgo(preferredLocales, { polyfill })\r\n\t}, [\r\n\t\tpreferredLocales,\r\n\t\tpolyfill\r\n\t])\r\n\r\n\t// The date or timestamp that was passed.\r\n\t// Convert timestamp to `Date`.\r\n\tdate = useMemo(() => getDate(date), [date])\r\n\r\n\t// Formats the `date`.\r\n\tconst formatDate = useCallback(() => {\r\n\t\tlet now = (nowProperty || Date.now()) - timeOffset\r\n\t\tlet stopUpdates\r\n\t\tif (future) {\r\n\t\t\tif (now >= date.getTime()) {\r\n\t\t\t\tnow = date.getTime()\r\n\t\t\t\tstopUpdates = true\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (minTimeLeft !== undefined) {\r\n\t\t\tconst maxNow = date.getTime() - minTimeLeft * 1000\r\n\t\t\tif (now > maxNow) {\r\n\t\t\t\tnow = maxNow\r\n\t\t\t\tstopUpdates = true\r\n\t\t\t}\r\n\t\t}\r\n\t\tlet [formattedDate, timeToNextUpdate] = timeAgo.format(date, timeStyle, {\r\n\t\t\tgetTimeToNextUpdate: true,\r\n\t\t\tnow,\r\n\t\t\tfuture,\r\n\t\t\tround\r\n\t\t})\r\n\t\tif (stopUpdates) {\r\n\t\t\ttimeToNextUpdate = INFINITY\r\n\t\t} else {\r\n\t\t\t// Legacy compatibility: there used to be an `updateInterval` property.\r\n\t\t\t// That was before `getTimeToNextUpdate` feature was introduced in `javascript-time-ago`.\r\n\t\t\t// A default interval of one minute is introduced because\r\n\t\t\t// `getTimeToNextUpdate` feature may theoretically return `undefined`.\r\n\t\t\ttimeToNextUpdate = updateInterval || timeToNextUpdate || 60 * 1000 // A minute by default.\r\n\t\t}\r\n\t\treturn [formattedDate, now + timeToNextUpdate]\r\n\t}, [\r\n\t\tdate,\r\n\t\tfuture,\r\n\t\ttimeStyle,\r\n\t\tupdateInterval,\r\n\t\tround,\r\n\t\tminTimeLeft,\r\n\t\ttimeAgo,\r\n\t\tnowProperty\r\n\t])\r\n\r\n\tconst formatDateRef = useRef()\r\n\tformatDateRef.current = formatDate\r\n\r\n\tconst [_formattedDate, _nextUpdateTime] = useMemo(formatDate, [])\r\n\tconst [formattedDate, setFormattedDate] = useState(_formattedDate)\r\n\r\n\tconst updater = useRef()\r\n\r\n\tuseEffect(() => {\r\n\t\tif (tick) {\r\n\t\t\tupdater.current = Updater.add({\r\n\t\t\t\tgetNextValue: () => formatDateRef.current(),\r\n\t\t\t\tsetValue: setFormattedDate,\r\n\t\t\t\tnextUpdateTime: _nextUpdateTime\r\n\t\t\t})\r\n\t\t\treturn () => updater.current.stop()\r\n\t\t}\r\n\t}, [tick])\r\n\r\n\tuseEffect(() => {\r\n\t\tif (updater.current) {\r\n\t\t\tupdater.current.forceUpdate()\r\n\t\t} else {\r\n\t\t\tconst [formattedDate] = formatDate()\r\n\t\t\tsetFormattedDate(formattedDate)\r\n\t\t}\r\n\t}, [formatDate])\r\n\r\n\t// Create verbose date formatter for the tooltip text.\r\n\tconst verboseDateFormatter = useMemo(() => {\r\n\t\treturn getVerboseDateFormatter(\r\n\t\t\tpreferredLocales, \r\n\t\t\tverboseDateFormat\r\n\t\t)\r\n\t}, [\r\n\t\tpreferredLocales,\r\n\t\tverboseDateFormat\r\n\t])\r\n\r\n\t// Format verbose date for the tooltip.\r\n\tconst verboseDate = useMemo(() => {\r\n\t\tif (formatVerboseDate) {\r\n\t\t\treturn formatVerboseDate(date)\r\n\t\t}\r\n\t\treturn verboseDateFormatter(date)\r\n\t}, [\r\n\t\tdate,\r\n\t\tformatVerboseDate,\r\n\t\tverboseDateFormatter\r\n\t])\r\n\r\n\treturn {\r\n\t\tdate,\r\n\t\tformattedDate,\r\n\t\tverboseDate\r\n\t};\r\n}\r\n\r\n// A thousand years is practically a metaphor for \"infinity\"\r\n// in the context of this component.\r\nconst YEAR = 365 * 24 * 60 * 60 * 1000\r\nconst INFINITY = 1000 * YEAR\r\n\r\n// `Intl.DateTimeFormat` for verbose date.\r\n// Formatted date example: \"Thursday, December 20, 2012, 7:00:00 AM GMT+4\"\r\nconst DEFAULT_VERBOSE_DATE_FORMAT = {\r\n\tweekday: 'long',\r\n\tday: 'numeric',\r\n\tmonth: 'long',\r\n\tyear: 'numeric',\r\n\thour: 'numeric',\r\n\tminute: '2-digit',\r\n\tsecond: '2-digit'\r\n\t// timeZoneName: 'short'\r\n};"],"mappings":"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"}